name: Build and Push Docker Image to GHCR

on:
  push:  # Triggers the workflow on push events to the main branch
    branches:
      - main
  schedule:  # Optional: Schedule the job to run daily
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allows manual triggering of the workflow

jobs:
  check_and_build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Get latest autobrr release version
      id: get_release
      run: |
        latest_version=$(curl -s https://api.github.com/repos/autobrr/autobrr/releases/latest | jq -r .tag_name)
        echo "latest_version=$latest_version" >> $GITHUB_ENV

    - name: Check existing image
      id: check_image
      run: |
        existing_version=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/user/packages/container/autobrr-qbitrace/versions | \
          jq -r '.[0].metadata.container.tags[] | select(. != "latest")' | head -n1)
        
        if [ "$existing_version" = "${{ env.latest_version }}" ]; then
          echo "Image is up to date. Skipping build."
          echo "skip_build=true" >> $GITHUB_ENV
        else
          echo "New version detected. Proceeding with build."
          echo "skip_build=false" >> $GITHUB_ENV
        fi

    - name: Set up Docker Buildx
      if: env.skip_build == 'false'
      uses: docker/setup-buildx-action@v1

    - name: Login to GHCR
      if: env.skip_build == 'false'
      run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and Tag Docker Image
      if: env.skip_build == 'false'
      run: |
        # Build the image with version and latest tags
        docker build . -t ghcr.io/${{ github.repository }}:${{ env.latest_version }} -t ghcr.io/${{ github.repository }}:latest
  
    - name: Push Version Tag
      if: env.skip_build == 'false'
      run: docker push ghcr.io/${{ github.repository }}:${{ env.latest_version }}
  
    - name: Push Latest Tag
      if: env.skip_build == 'false'
      run: docker push ghcr.io/${{ github.repository }}:latest
  
    - name: Send Gotify Notification
      if: env.skip_build == 'false'
      run: |
        curl -X POST \
        -H "Waf-bypass: ${{ secrets.WAF_BYPASS }}" \
        -F "title=New Docker Image Pushed" \
        -F "message=A new Docker image for autobrr-qbitrace version ${latest_version} has been pushed to GHCR." \
        ${{ secrets.GOTIFY_WEBHOOK_URL }}